# Логика формирования датасета

## Общее описание
Данный документ описывает логику формирования датасета для обучения модели трансформера для генерации погодных эффектов (тумана) на изображениях. Датасет состоит из трех типов изображений:
1. Чистые изображения (clean) - исходные изображения без эффектов
2. Шаблоны (template) - изображения с эффектом тумана, используемые как шаблоны
3. Целевые изображения (target) - изображения с эффектом тумана, которые модель должна научиться генерировать

## Структура датасета
```
dataset/
├── input/                  # Директория с исходными изображениями
├── training/               # Директория с обучающим датасетом
│   ├── relationships.json  # Файл с отношениями между изображениями
│   ├── train/              # Обучающая выборка
│   │   ├── clean/          # Чистые изображения
│   │   ├── template/       # Шаблоны с эффектом тумана
│   │   └── target/         # Целевые изображения с эффектом тумана
│   └── test/               # Тестовая выборка
│       ├── clean/          # Чистые изображения
│       ├── template/       # Шаблоны с эффектом тумана
│       └── target/         # Целевые изображения с эффектом тумана
└── fog_template.png        # Шаблон тумана
```

## Процесс формирования датасета

### 1. Подготовка исходных данных
- Исходные изображения размещаются в директории `dataset/input/`
- Для разделения больших изображений на патчи используется функция `split_image_into_patches` из модуля `image_patches.py`

### 2. Разделение на обучающую и тестовую выборки
- Исходные изображения случайным образом разделяются на обучающую (train) и тестовую (test) выборки
- По умолчанию используется соотношение 80% для обучения и 20% для тестирования
- Для воспроизводимости результатов используется фиксированное значение random_state=42

### 3. Генерация эффекта тумана
Для каждого изображения в обучающей и тестовой выборках:
1. Выбираются случайные изображения из общего набора для использования в качестве шаблонов
2. Из каждого шаблонного изображения извлекается случайный патч размером 256x256 пикселей
3. К шаблонному патчу применяется эффект тумана с использованием функции `apply_noise`
4. К исходному изображению применяется тот же эффект тумана с тем же seed для создания целевого изображения
5. Все три изображения (чистое, шаблон с туманом, целевое с туманом) сохраняются в соответствующих директориях

### 4. Алгоритм генерации эффекта тумана
Эффект тумана генерируется с помощью следующих шагов:
1. Генерация шума Перлина для создания естественного паттерна тумана
   - Используется многоуровневый шум с разными частотами
   - Параметры: scale, octaves, persistence, lacunarity
2. Симуляция атмосферного рассеивания
   - Моделирование физики рассеивания света в тумане
   - Учитывается глубина сцены (упрощенно - градиент сверху вниз)
3. Применение шума к изображению
   - Комбинирование исходного изображения с шумом Перлина
   - Добавление случайных вариаций для реалистичности

### 5. Сохранение отношений между изображениями
- Для каждой тройки изображений (чистое, шаблон, целевое) сохраняется информация об их взаимосвязи
- Эта информация записывается в файл `relationships.json` в формате:
```json
{
  "train": [
    {
      "clean": "clean_0.png",
      "template": "template_0_0.png",
      "target": "target_0_0.png",
      "original_template": "original_image.png",
      "noise_seed": 123456
    },
    ...
  ],
  "test": [
    ...
  ]
}
```

## Параметры генерации датасета
- `input_dir`: директория с исходными изображениями (по умолчанию "dataset/input")
- `output_dir`: директория для сохранения датасета (по умолчанию "dataset/training")
- `test_size`: доля изображений для тестовой выборки (по умолчанию 0.2)
- `templates_per_image`: количество шаблонов для каждого изображения (по умолчанию 3)
- `patch_size`: размер патча для шаблонов (по умолчанию (256, 256))

## Параметры генерации тумана
- `scale`: масштаб шума Перлина (влияет на размер "клубов" тумана)
- `octaves`: количество октав шума (влияет на детализацию)
- `persistence`: персистентность шума (влияет на вклад каждой октавы)
- `lacunarity`: лакунарность шума (влияет на частоту деталей)
- `fog_density`: плотность тумана (влияет на прозрачность)
- `fog_intensity`: интенсивность тумана (влияет на яркость)

## Использование датасета для обучения
Датасет используется для обучения модели CausalWeatherTransformer, которая принимает на вход чистое изображение и шаблон с туманом, и генерирует целевое изображение с туманом. Модель обучается минимизировать разницу между сгенерированным и целевым изображениями с использованием специализированной функции потерь WeatherLoss.
